-- procedure para gerar o relatorio de saldo do cliente

CREATE OR REPLACE PROCEDURE REPORT_CLIENT_BALANCE (
    P_CLIENT_ID IN RAW,
    P_CLIENTE_NOME OUT VARCHAR2,
    P_DATA_CADASTRO OUT TIMESTAMP,
    P_ENDERECO OUT VARCHAR2,
    P_MOV_CREDITO OUT NUMBER,
    P_MOV_DEBITO OUT NUMBER,
    P_TOTAL_MOVIMENTACOES OUT NUMBER,
    P_VALOR_PAGO_MOVIMENTACOES OUT NUMBER,
    P_SALDO_INICIAL OUT NUMBER,
    P_SALDO_ATUAL OUT NUMBER
)
AS
BEGIN
    SELECT NAME, CREATED_AT
    INTO P_CLIENTE_NOME, P_DATA_CADASTRO
    FROM CLIENT
    WHERE ID = P_CLIENT_ID;
    
    SELECT STREET || ', ' || ADDRESS_NUMBER || ', ' || NEIGHBORHOOD || ', ' || CITY || ', ' || STATE || ', ' || ZIP_CODE
    INTO P_ENDERECO
    FROM ADDRESS
    WHERE CLIENT_ID = P_CLIENT_ID;
    
    SELECT INITIAL_BALANCE, BALANCE
    INTO P_SALDO_INICIAL, P_SALDO_ATUAL
    FROM ACCOUNT
    WHERE CLIENT_ID = P_CLIENT_ID;
    
    -- verifica o tipo da movimentação para contabilizar
    SELECT COUNT(CASE WHEN OPERATION_TYPE = 'C' THEN 1 END),
           COUNT(CASE WHEN OPERATION_TYPE = 'D' THEN 1 END),
           COUNT(*)
    INTO P_MOV_CREDITO, P_MOV_DEBITO, P_TOTAL_MOVIMENTACOES
    FROM TRANSACTION
    WHERE ACCOUNT_ID IN (SELECT ID FROM ACCOUNT WHERE CLIENT_ID = P_CLIENT_ID);
    
    -- calcula o valor das movimentações
    IF P_TOTAL_MOVIMENTACOES <= 10 THEN
        P_VALOR_PAGO_MOVIMENTACOES := P_TOTAL_MOVIMENTACOES * 1.00;
    ELSIF P_TOTAL_MOVIMENTACOES <= 20 THEN
        P_VALOR_PAGO_MOVIMENTACOES := P_TOTAL_MOVIMENTACOES * 0.75;
    ELSE
        P_VALOR_PAGO_MOVIMENTACOES := P_TOTAL_MOVIMENTACOES * 0.50;
    END IF;
END;